
The `mpf:` section of the machine configuration file contains settings
that affect the actual framework itself (as opposed to game-specific
settings). In most cases you will never need change any of these
settings, but they are available to you if you want. This sectioncan
be used in your machine-wide config files. This section *cannot* be
used in mode-specific config files. Here's the default MPF section
that the Mission Pinball Framework uses:


::

    
    mpf:
        system_modules: !!omap  # order is important here
            - timing: mpf.system.timing.Timing
            - events: mpf.system.events.EventManager
            - switch_controller: mpf.system.switch_controller.SwitchController
            - ball_controller: mpf.system.ball_controller.BallController
            - modes: mpf.system.modes.ModeController
            - light_controller: mpf.system.light_controller.LightController
            - bcp: mpf.system.bcp.BCP
            - shots: mpf.system.shots.ShotController
            - logic_blocks: mpf.system.logic_blocks.LogicBlocks
            - scoring: mpf.system.scoring.ScoreController
            - target_controller: mpf.system.target_controller.TargetController
    
        device_modules:
            driver.Driver
            switch.Switch
            matrix_light.MatrixLight
            led.LED
            gi.GI
            autofire.AutofireCoil
            ball_device.BallDevice
            drop_target.DropTarget
            drop_target.DropTargetBank
            target.Target
            target.TargetGroup
            flipper.Flipper
            diverter.Diverter
            score_reel.ScoreReel
            score_reel.ScoreReelGroup
            flasher.Flasher
            playfield_transfer.PlayfieldTransfer
        
        plugins:
            auditor
            ball_save
            ball_search
            info_lights
            osc
            socket_events
            switch_player
    
        paths:
            scriptlets: scriptlets
            shows: shows
            audits: audits/audits.yaml
            machine_files: machine_files
            config: config
            modes: modes
    
        default_pulse_ms: 10
        default_flash_ms: 50
        auto_create_switch_events: True
        switch_event_active: "%_active"
        switch_event_inactive: "%_inactive"
        switch_tag_event: sw_%
        
        device_events:
            autofires:
                enable: ball_started
                disable: ball_ending, tilt, slam_tilt
            flippers:
                enable: ball_started
                disable: ball_ending, tilt, slam_tilt
            drop_targets:
                reset: ball_starting
                enable:
                disable:
            targets:
                enable: ball_started
                disable: ball_ending, tilt, slam_tilt
                rotate_left:
                rotate_right:




system_modules:
~~~~~~~~~~~~~~~

This is a list of the system modules that MPF will load from the
/system folder.



device_modules:
~~~~~~~~~~~~~~~

This is the list of the device modules that MPF will load from the
/devices folder. (Note thatnot all device types are used in every
machine, and MPF will only load device modules that have corresponding
devices specified in the machine configuration files.



plugins:
~~~~~~~~

The list of plugins that MPF will attempt to load when it boots. Note
that some plugins require certain sections to exist in the config
files, and if they're not there, then they don't load. (For example,
if you don't have a `socket_events:` section in your config, then the
socket_events plugin won't load.)



paths:
~~~~~~

This is the subfolder location where where MPF looks for certain
things in each machine's configuration folder. `scriptlets:
scriptlets`means that MPF looks for scriptletsin the
`/scriptlets`folder, etc. You can override this in your own
configuration files if you want.



default_pulse_ms:
~~~~~~~~~~~~~~~~~

Number of ms to use to pulse coils for the coils in your configuration
file where you have not specified a default. (You can always pass a
parameter to a coil's pulse method too in order to pulse it at
whatever you want, like `coil.pulse(10)`or whatever.



default_pulse_ms:
~~~~~~~~~~~~~~~~~

The default pulse time, in ms, of coils.



default_flash_ms:
~~~~~~~~~~~~~~~~~

The default pulse time, in ms, of flashers.



auto_create_switch_events:
~~~~~~~~~~~~~~~~~~~~~~~~~~

True/False which controls whether MPF will automaticallypost events
when switches open and close.



switch_event_active:
~~~~~~~~~~~~~~~~~~~~

The name of the switch event that's posted when a switch is activated.
The percent sign is a placeholder that is replaced with the switch
name. The default of `"%_active"` means that when a switch called
*target1* is activated, an event called *target1_active* will be
posted. (Note that "%_active" has quotation marks around it because a
value starting with a percent sign confuses the YAML processor, so we
wrap it in quotes to let it know that it's a string.) This feature
requires that `auto_create_switch_events:` is true.



switch_event_inactive:
~~~~~~~~~~~~~~~~~~~~~~

Same as *switch_event_active* above, except it controls the name of
the event that's posted when a switch goes inactive.



switch_tag_event:
~~~~~~~~~~~~~~~~~

This specifies the name of events that are posted when a switch is
activated based on switch tags. The percentage sign is replaced with
the tag name. MPF will post one event for eachtag. For example, if you
have a switch that's tagged with `home, start, yes`, and
`switch_tag_event: sw_%`, then when that switch is hit, MPF will post
the events *sw_home*, *sw_yes*, and *sw_start*.



device_events:
~~~~~~~~~~~~~~

This section lets you map which control events will be created for
various devices, as well as lets you specify the default events that
are created if a particular device doesn't have any events specified
in its configuration.



