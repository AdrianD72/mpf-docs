
The `bcp:` section of your machine config file controls how the MPF
core engine communicates with the standalone media controller. ✅ This
sectioncan be used in your machine-wide config files. ⛔ This section
*cannot* be used in mode-specific config files. There's a default
`bcp:` section in the default `mpfconfig.yaml` system-wide defaults
section that should be fine to get started, and then you can override
it if needed for a specific situation:


::

    
    bcp:
        connections:
            local_display:
                host: localhost
                port: 5050
                connection_attempts: 5
                require_connection: no
    
        event_map:
            ball_started:
                command: ball_start
                params:
                    player: "%player"
                    ball: "%ball"
    
            ball_ending:
                command: ball_end
    
            machineflow_Attract_start:
                command: attract_start
    
            machineflow_Attract_stop:
                command: attract_stop
    
            game_ended:
                command: game_end
    
            player_turn_start:
                command: player_turn_start
                params:
                    player: "%number"
        
        player_variables:
    #        __all__
            ball
            extra_balls




connections:
~~~~~~~~~~~~

The `connections:` section is where you can specify the connections
the MPF core engine will make to standalone media controllers. MPF
supports connecting to multiple media controllers simultaneously which
is why you can add multiple entries here.


+ `<connection name>:` The name you want to use to refer to this
  connection. This is called local_display in the example above.
+ `host:` The host name of the media controller. The default is
  localhost.
+ `port:` The TCP port the remote media controller is listening on.
  The default is 5050.
+ `connection_attempts:` How many times the MPF core engine will
  attempt to connect to the media controller before giving up. A value
  of `-1` means it will keep trying forever.
+ `require_connection:` If this is true (or "yes"), then the MPF core
  engine won't run if it can't connect to the remote media controller.
  Also if it's true, MPF will quit if it loses the connection. The
  default is False.




event_map:
~~~~~~~~~~

This section contains a list of MPF events that get mapped to BCP
commands. You shouldn't have to change this. This is what MPF uses
internally to map MPF events to the `BCP command specification`_.


+ `<event_name>:` The name of the MPF event you're creating a mapping
  for.
+ `command:` The name of the BCP command that will be sent when the
  MPF event is posted.
+ `params:` A list of parameters that will be passed via BCP along
  with this BCP command.




player_variables:
~~~~~~~~~~~~~~~~~

The `player_variables:` section lets you specify which MPF player
variables will be broadcast via BCP to the media controller. (MPF will
send these any time there's a change.) You can either list out the
individual names of the players variables you want to send, like this:


::

    
        player_variables:
            ball
            extra_balls


Or you can use the entry `__all__` (that's two underscores, the
letters "all", then two more underscores) to send every change of
every player variable to the media controller. Here's an example:


::

    
        player_variables:
            __all__


.. _BCP command specification: https://missionpinball.com/docs/advanced-programming/bcp1-0-spec/


